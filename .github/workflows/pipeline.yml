name: ServiceNow

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: CI/CD
    runs-on: ubuntu-latest
    steps:
      - name: Apply Changes
        uses: <url to the repository with action> # like username/repo-name
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowSourceInstance: ${{ secrets.SNOW_SOURCE_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}
          appScope: ${{ secrets.APP_SCOPE }}

      - name: Publish Application
        id: publish_app
        uses: <url to the repository with action> # like username/repo-name
        with:
          version: "x.x.x"
          versionTemplate: "x.x"
          devNotes: "string"
          versionFormat: exact
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowSourceInstance: ${{ secrets.SNOW_SOURCE_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}
          appScope: ${{ secrets.APP_SCOPE }}

      - name: Install Application
        id: install_app
        uses: <url to the repository with action> # like username/repo-name
        with:
          version: ${{steps.publish_app.outputs.newVersion}}
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowInstallInstance: ${{ secrets.SNOW_INSTALL_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}
          appScope: ${{ secrets.APP_SCOPE }}

      - name: Rollback Application
        if: ${{ failure() && steps.install_app.outputs.rollbackVersion }}
        uses: <url to the repository with action> # like username/repo-name
        with:
          version: ${{steps.install_app.outputs.rollbackVersion}}
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowInstallInstance: ${{ secrets.SNOW_INSTALL_INSTANCE }}
          appSysID: ${{ secrets.APP_SYS_ID }}
          appScope: ${{ secrets.APP_SCOPE }}

      - name: Activate Plugin
        id: activate_plugin
        uses: <url to the repository with action> # like username/repo-name
        with:
          pluginID:
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowInstallInstance: ${{ secrets.SNOW_INSTALL_INSTANCE }}

      - name: Rollback Plugin
        if: ${{ failure() && steps.activate_plugin.outputs.failed }} # Runs if Activate Plugin step is failed
        uses: <url to the repository with action> # like username/repo-name
        with:
          pluginID:
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowInstallInstance: ${{ secrets.SNOW_INSTALL_INSTANCE }}
          
      - name: Run Tests
        uses: <url to the repository with action> # like username/repo-name
        with:
          browserName:
          browserVersion:
          osName:
          osVersion:
          testSuiteSysId:
          testSuiteName:
        env:
          snowUsername: ${{ secrets.SNOW_USERNAME }}
          snowPassword: ${{ secrets.SNOW_PASSWORD }}
          snowInstallInstance: ${{ secrets.SNOW_INSTALL_INSTANCE }}
